{"version":3,"sources":["polymer/polymer-element.ts"],"names":[],"mappings":"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","file":"polymer-element.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5';\nimport * as estree from 'estree';\n\nimport {Annotation as JsDocAnnotation} from '../javascript/jsdoc';\nimport {Document, Element, ElementBase, LiteralValue, Method, Privacy, Property, ScannedAttribute, ScannedElement, ScannedElementBase, ScannedEvent, ScannedMethod, ScannedProperty, Severity, SourceRange, Warning} from '../model/model';\nimport {ScannedReference} from '../model/reference';\n\nimport {Behavior, ScannedBehaviorAssignment} from './behavior';\nimport {JavascriptDatabindingExpression} from './expression-scanner';\nimport {getOrInferPrivacy} from './js-utils';\nimport {PolymerElementMixin} from './polymer-element-mixin';\n\nexport interface BasePolymerProperty {\n  published?: boolean;\n  notify?: boolean;\n  observer?: string;\n  observerNode?: estree.Expression|estree.Pattern;\n  observerExpression?: JavascriptDatabindingExpression;\n  reflectToAttribute?: boolean;\n  computedExpression?: JavascriptDatabindingExpression;\n  /**\n   * True if the property is part of Polymer's element configuration syntax.\n   *\n   * e.g. 'properties', 'is', 'extends', etc\n   */\n  isConfiguration?: boolean;\n}\n\nexport interface ScannedPolymerProperty extends ScannedProperty,\n                                                BasePolymerProperty {}\nexport interface PolymerProperty extends Property, BasePolymerProperty {}\n\nexport class LocalId {\n  name: string;\n  range: SourceRange;\n\n  constructor(name: string, range: SourceRange) {\n    this.name = name;\n    this.range = range;\n  }\n}\n\nexport interface Observer {\n  javascriptNode: estree.Expression|estree.SpreadElement;\n  expression: LiteralValue;\n  parsedExpression: JavascriptDatabindingExpression|undefined;\n}\n\nexport interface Options {\n  tagName?: string;\n  className?: string;\n  superClass?: ScannedReference;\n  mixins?: ScannedReference[];\n  extends?: string;\n  jsdoc?: JsDocAnnotation;\n  description?: string;\n  properties?: ScannedProperty[];\n  methods?: ScannedMethod[];\n  attributes?: ScannedAttribute[];\n  observers?: Observer[];\n  listeners?: {event: string, handler: string}[];\n  behaviors?: ScannedBehaviorAssignment[];\n\n  demos?: {desc: string; path: string}[];\n  events?: ScannedEvent[];\n\n  abstract?: boolean;\n  privacy: Privacy;\n  astNode: any;\n  sourceRange: SourceRange|undefined;\n}\n\nexport interface ScannedPolymerExtension extends ScannedElementBase {\n  properties: ScannedPolymerProperty[];\n  methods: ScannedMethod[];\n  observers: Observer[];\n  listeners: {event: string, handler: string}[];\n  behaviorAssignments: ScannedBehaviorAssignment[];\n  // FIXME(rictic): domModule and scriptElement aren't known at a file local\n  //     level. Remove them here, they should only exist on PolymerElement.\n  domModule?: dom5.Node;\n  scriptElement?: dom5.Node;\n  // TODO(justinfagnani): Not Polymer-specific, and hopefully not necessary\n  // Indicates if an element is a pseudo element\n  pseudo: boolean;\n  abstract?: boolean;\n\n  addProperty(prop: ScannedPolymerProperty): void;\n}\n\nexport function addProperty(\n    target: ScannedPolymerExtension, prop: ScannedPolymerProperty) {\n  target.properties.push(prop);\n  const attributeName = propertyToAttributeName(prop.name);\n  // Don't produce attributes or events for nonpublic properties, properties\n  // that aren't in Polymer's `properties` block (i.e. not published),\n  // or properties whose names can't be converted into attribute names.\n  if ((prop.privacy && prop.privacy !== 'public') || !attributeName ||\n      !prop.published) {\n    return;\n  }\n  target.attributes.push({\n    name: attributeName,\n    sourceRange: prop.sourceRange,\n    description: prop.description,\n    type: prop.type,\n    changeEvent: prop.notify ? `${attributeName}-changed` : undefined\n  });\n  if (prop.notify) {\n    target.events.push({\n      name: `${attributeName}-changed`,\n      description: `Fired when the \\`${prop.name}\\` property changes.`,\n      sourceRange: prop.sourceRange,\n      astNode: prop.astNode,\n      warnings: []\n    });\n  }\n}\n\nexport function addMethod(\n    target: ScannedPolymerExtension, method: ScannedMethod) {\n  target.methods.push(method);\n}\n\n/**\n * The metadata for a single polymer element\n */\nexport class ScannedPolymerElement extends ScannedElement implements\n  ScannedPolymerExtension {\n  properties: ScannedPolymerProperty[] = [];\n  methods: ScannedMethod[] = [];\n  observers: Observer[] = [];\n  listeners: {event: string, handler: string}[] = [];\n  behaviorAssignments: ScannedBehaviorAssignment[] = [];\n  // FIXME(rictic): domModule and scriptElement aren't known at a file local\n  //     level. Remove them here, they should only exist on PolymerElement.\n  domModule?: dom5.Node;\n  scriptElement?: dom5.Node;\n  // Indicates if an element is a pseudo element\n  pseudo: boolean = false;\n  abstract?: boolean;\n\n  constructor(options: Options) {\n    super();\n    // TODO(justinfagnani): fix this constructor to not be crazy, or remove\n    // class altogether.\n    const optionsCopy = Object.assign({}, options) as Options;\n    delete optionsCopy.properties;\n    delete optionsCopy.methods;\n    Object.assign(this, optionsCopy);\n    if (options && options.properties) {\n      options.properties.forEach((p) => this.addProperty(p));\n    }\n    if (options && options.methods) {\n      options.methods.forEach((m) => this.addMethod(m));\n    }\n  }\n\n  addProperty(prop: ScannedPolymerProperty) {\n    addProperty(this, prop);\n  }\n\n  addMethod(method: ScannedMethod) {\n    addMethod(this, method);\n  }\n\n  resolve(document: Document): PolymerElement {\n    return resolveElement(this, document);\n  }\n}\n\nexport interface PolymerExtension extends ElementBase {\n  properties: PolymerProperty[];\n  methods: Method[];\n\n  observers: {\n    javascriptNode: estree.Expression | estree.SpreadElement,\n    expression: LiteralValue,\n    parsedExpression: JavascriptDatabindingExpression|undefined;\n  }[];\n  listeners: {event: string, handler: string}[];\n  behaviorAssignments: ScannedBehaviorAssignment[];\n  domModule?: dom5.Node;\n  scriptElement?: dom5.Node;\n  localIds: LocalId[];\n\n  abstract?: boolean;\n\n  emitPropertyMetadata(property: PolymerProperty): any;\n}\n\nexport class PolymerElement extends Element implements PolymerExtension {\n  properties: PolymerProperty[] = [];\n  methods: Method[] = [];\n\n  observers: Observer[] = [];\n  listeners: {event: string, handler: string}[] = [];\n  behaviorAssignments: ScannedBehaviorAssignment[] = [];\n  domModule?: dom5.Node;\n  scriptElement?: dom5.Node;\n  localIds: LocalId[] = [];\n\n  abstract?: boolean;\n\n  constructor() {\n    super();\n    this.kinds = new Set(['element', 'polymer-element']);\n  }\n\n  emitPropertyMetadata(property: PolymerProperty) {\n    const polymerMetadata: any = {};\n    const polymerMetadataFields = ['notify', 'observer', 'readOnly'];\n    for (const field of polymerMetadataFields) {\n      if (field in property) {\n        polymerMetadata[field] = property[field];\n      }\n    }\n    return {polymer: polymerMetadata};\n  }\n}\n\n/**\n * Implements Polymer core's translation of property names to attribute names.\n *\n * Returns null if the property name cannot be so converted.\n */\nfunction propertyToAttributeName(propertyName: string): string|null {\n  // Polymer core will not map a property name that starts with an uppercase\n  // character onto an attribute.\n  if (propertyName[0].toUpperCase() === propertyName[0]) {\n    return null;\n  }\n  return propertyName.replace(\n      /([A-Z])/g, (_: string, c1: string) => `-${c1.toLowerCase()}`);\n}\n\nfunction resolveElement(\n    scannedElement: ScannedPolymerElement, document: Document): PolymerElement {\n  const element = new PolymerElement();\n  element.privacy = scannedElement.privacy;\n  applySuperClass(element, scannedElement, document);\n  applyMixins(element, scannedElement, document);\n  applySelf(element, scannedElement, document);\n\n  //\n  // Behaviors\n  //\n  // TODO(justinfagnani): Refactor behaviors to work like superclasses and\n  // mixins and be applied before own members\n  const behaviorsAndWarnings =\n      getBehaviors(scannedElement.behaviorAssignments, document);\n\n  // This has the combined effects of copying the array of warnings from the\n  // ScannedElement, and adding in any new ones found when resolving behaviors.\n  element.warnings = element.warnings.concat(behaviorsAndWarnings.warnings);\n\n  const behaviors = Array.from(behaviorsAndWarnings.behaviors);\n\n  element.properties = inheritValues(\n      element.properties,\n      behaviors.map((b) => ({source: b.className, values: b.properties})));\n  element.methods = inheritValues(\n      element.methods,\n      behaviors.map((b) => ({source: b.className, values: b.methods})));\n  element.attributes = inheritValues(\n      element.attributes,\n      behaviors.map((b) => ({source: b.className, values: b.attributes})));\n  element.events = inheritValues(\n      element.events,\n      behaviors.map((b) => ({source: b.className, values: b.events})));\n\n  const domModule = document.getOnlyAtId(\n      'dom-module',\n      scannedElement.tagName || '',\n      {imported: true, externalPackages: true});\n\n  if (domModule) {\n    element.description = element.description || domModule.comment || '';\n    element.domModule = domModule.node;\n    element.slots = domModule.slots.slice();\n    element.localIds = domModule.localIds.slice();\n  }\n\n  if (scannedElement.pseudo) {\n    element.kinds.add('pseudo-element');\n  }\n\n  for (const method of element.methods) {\n    // methods are only public by default if they're documented.\n    method.privacy = getOrInferPrivacy(method.name, method.jsdoc, true);\n  }\n\n  return element;\n}\n\n/**\n * Note: mutates `element`.\n */\nfunction inheritFrom(element: PolymerElement, superElement: PolymerExtension) {\n  // TODO(justinfagnani): fixup and use inheritValues, but it has slightly odd\n  // semantics currently\n\n  for (const superProperty of superElement.properties) {\n    const newProperty = Object.assign({}, superProperty);\n    if (!newProperty.inheritedFrom) {\n      const superName = getSuperName(superElement);\n      if (superName) {\n        newProperty.inheritedFrom = superName;\n      }\n    }\n    element.properties.push(newProperty);\n  }\n\n  for (const superMethod of superElement.methods) {\n    const newMethod = Object.assign({}, superMethod);\n    if (!newMethod.inheritedFrom) {\n      const superName = getSuperName(superElement);\n      if (superName) {\n        newMethod.inheritedFrom = superName;\n      }\n    }\n    element.methods.push(newMethod);\n  }\n\n  for (const superAttribute of superElement.attributes) {\n    const newAttribute = Object.assign({}, superAttribute);\n    if (!newAttribute.inheritedFrom) {\n      const superName = getSuperName(superElement);\n      if (superName) {\n        newAttribute.inheritedFrom = superName;\n      }\n    }\n    element.attributes.push(newAttribute);\n  }\n\n  for (const superEvent of superElement.events) {\n    const newEvent = Object.assign({}, superEvent);\n    if (!newEvent.inheritedFrom) {\n      const superName = getSuperName(superElement);\n      if (superName) {\n        newEvent.inheritedFrom = superName;\n      }\n    }\n    element.events.push(newEvent);\n  }\n\n  // TODO(justinfagnani): slots, listeners, observers, dom-module?\n  // What actually inherits?\n}\n\nfunction applySelf(\n    element: PolymerElement,\n    scannedElement: ScannedPolymerElement,\n    document: Document) {\n  // TODO(justinfagnani): Copy over all properties better, or have\n  // PolymerElement wrap ScannedPolymerElement.\n  element.abstract = scannedElement.abstract;\n  element.astNode = scannedElement.astNode;\n  scannedElement.attributes.forEach((o) => element.attributes.push(o));\n  scannedElement.behaviorAssignments.forEach(\n      (o) => element.behaviorAssignments.push(o));\n  element.className = scannedElement.className;\n  scannedElement.demos.forEach((o) => element.demos.push(o));\n  element.description = scannedElement.description;\n  element.domModule = scannedElement.domModule;\n  scannedElement.events.forEach((o) => element.events.push(o));\n  element.extends = scannedElement.extends;\n  element.jsdoc = scannedElement.jsdoc;\n  scannedElement.listeners.forEach((o) => element.listeners.push(o));\n  // scannedElement.mixins.forEach(\n  //     (o) => element.mixins.push(o.resolve(document)));\n  scannedElement.observers.forEach((o) => element.observers.push(o));\n  scannedElement.properties.forEach((o) => element.properties.push(o));\n  scannedElement.methods.forEach((o) => element.methods.push(o));\n  element.scriptElement = scannedElement.scriptElement;\n  scannedElement.slots.forEach((o) => element.slots.push(o));\n  element.sourceRange = scannedElement.sourceRange!;\n  element.summary = scannedElement.summary;\n  element.superClass =\n      scannedElement.superClass && scannedElement.superClass.resolve(document);\n  element.tagName = scannedElement.tagName;\n  scannedElement.warnings.forEach((o) => element.warnings.push(o));\n}\n\nfunction applySuperClass(\n    element: PolymerElement,\n    scannedElement: ScannedElement,\n    document: Document) {\n  if (scannedElement.superClass &&\n      scannedElement.superClass.identifier !== 'HTMLElement') {\n    const superElements =\n        document.getById('element', scannedElement.superClass.identifier, {\n          externalPackages: true,\n          imported: true,\n        });\n    if (superElements.size === 1) {\n      const superElement = superElements.values().next().value;\n      if (!superElement.kinds.has('polymer-element')) {\n        element.warnings.push({\n          message:\n              `A Polymer element can\\'t extend from a non-Polymer element: ${scannedElement\n                  .superClass.identifier}`,\n          severity: Severity.ERROR,\n          code: 'unknown-superclass',\n          sourceRange: scannedElement.superClass.sourceRange!,\n        });\n      } else {\n        inheritFrom(element, superElement as PolymerElement);\n      }\n    } else {\n      if (superElements.size === 0) {\n        element.warnings.push({\n          message: `Unable to resolve superclass ${scannedElement.superClass\n                       .identifier}`,\n          severity: Severity.ERROR,\n          code: 'unknown-superclass',\n          sourceRange: scannedElement.superClass.sourceRange!,\n        });\n      } else {\n        element.warnings.push({\n          message: `Multiple superclasses found for ${scannedElement.superClass\n                       .identifier}`,\n          severity: Severity.ERROR,\n          code: 'unknown-superclass',\n          sourceRange: scannedElement.superClass.sourceRange!,\n        });\n      }\n    }\n  }\n}\n\nfunction applyMixins(\n    element: PolymerElement,\n    scannedElement: ScannedElement,\n    document: Document) {\n  for (const scannedMixinReference of scannedElement.mixins) {\n    const mixinReference = scannedMixinReference.resolve(document);\n    const mixinId = mixinReference.identifier;\n    element.mixins.push(mixinReference);\n    const mixins = document.getById('element-mixin', mixinId, {\n      externalPackages: true,\n      imported: true,\n    });\n    if (mixins.size === 0) {\n      element.warnings.push({\n        message: `@mixes reference not found: ${mixinId}.` +\n            `Did you import it? Is it annotated with @polymerMixin?`,\n        severity: Severity.ERROR,\n        code: 'mixes-reference-not-found',\n        sourceRange: scannedMixinReference.sourceRange!,\n      });\n      continue;\n    } else if (mixins.size > 1) {\n      element.warnings.push({\n        message: `@mixes reference, multiple mixins found ${mixinId}`,\n        severity: Severity.ERROR,\n        code: 'mixes-reference-multiple-found',\n        sourceRange: scannedMixinReference.sourceRange!,\n      });\n      continue;\n    }\n    const mixin = mixins.values().next().value;\n    if (!(mixin instanceof PolymerElementMixin)) {\n      element.warnings.push({\n        message: `@mixes reference to a non-Mixin ${mixinId}`,\n        severity: Severity.ERROR,\n        code: 'mixes-reference-non-mixin',\n        sourceRange: scannedMixinReference.sourceRange!,\n      });\n      continue;\n    }\n    inheritFrom(element, mixin as PolymerElementMixin);\n  }\n}\n\n// TODO(justinfagnani): move to Behavior\nexport function getBehaviors(\n    behaviorAssignments: ScannedBehaviorAssignment[], document: Document) {\n  const resolvedBehaviors = new Set<Behavior>();\n  const warnings = _getFlattenedAndResolvedBehaviors(\n      behaviorAssignments, document, resolvedBehaviors);\n  return {behaviors: resolvedBehaviors, warnings};\n}\n\nfunction _getFlattenedAndResolvedBehaviors(\n    behaviorAssignments: ScannedBehaviorAssignment[],\n    document: Document,\n    resolvedBehaviors: Set<Behavior>) {\n  const warnings: Warning[] = [];\n  for (const behavior of behaviorAssignments) {\n    const foundBehaviors = document.getById(\n        'behavior', behavior.name, {imported: true, externalPackages: true});\n    if (foundBehaviors.size === 0) {\n      warnings.push({\n        message: `Unable to resolve behavior ` +\n            `\\`${behavior.name}\\`. Did you import it? Is it annotated with ` +\n            `@polymerBehavior?`,\n        severity: Severity.ERROR,\n        code: 'unknown-polymer-behavior',\n        sourceRange: behavior.sourceRange\n      });\n      // Skip processing this behavior.\n      continue;\n    }\n    if (foundBehaviors.size > 1) {\n      warnings.push({\n        message: `Found more than one behavior named ${behavior.name}.`,\n        severity: Severity.WARNING,\n        code: 'multiple-polymer-behaviors',\n        sourceRange: behavior.sourceRange\n      });\n      // Don't skip processing this behavior, just take the most recently\n      // declared instance.\n    }\n    const foundBehavior = Array.from(foundBehaviors)[foundBehaviors.size - 1];\n    if (resolvedBehaviors.has(foundBehavior)) {\n      continue;\n    }\n    resolvedBehaviors.add(foundBehavior);\n    // Note that we don't care about warnings from transitively resolved\n    // behaviors. Those should become warnings on those behaviors themselves.\n    _getFlattenedAndResolvedBehaviors(\n        foundBehavior.behaviorAssignments, document, resolvedBehaviors);\n  }\n  return warnings;\n}\n\ninterface PropertyLike {\n  name: string;\n  inheritedFrom?: string;\n}\n\n/**\n * Merges values from `newValuesBySource` into `values`, but only if they\n * don't already exist in `values`, thus giving an inheritance-like behavior.\n *\n * TODO(justinfagnani): we should always build up an element from base-class\n * on up to get natural overriding behavior. We should also merges\n * individual definitions if that's what Polymer does. Need tests.\n */\nfunction inheritValues<P extends PropertyLike>(\n    values: P[], newValuesBySource: {source: string, values: P[]}[]): P[] {\n  const valuesByName = new Map<string, P>();\n\n  for (const initial of values) {\n    valuesByName.set(initial.name, initial);\n  }\n\n  for (const source of newValuesBySource) {\n    for (const value of source.values) {\n      if (!valuesByName.has(value.name)) {\n        const copy = Object.assign({}, value);\n        // If a value is already inherited, prefer the original source\n        copy.inheritedFrom = value.inheritedFrom || source.source;\n        valuesByName.set(copy.name, copy);\n      }\n    }\n  }\n  return Array.from(valuesByName.values());\n}\n\nfunction getSuperName(superElement: PolymerExtension): string|undefined {\n  // TODO(justinfagnani): Mixins, elements and functions should all have a\n  // name property.\n  if (superElement instanceof PolymerElement) {\n    return superElement.className;\n  } else if (superElement instanceof PolymerElementMixin) {\n    return superElement.name;\n  }\n}\n"]}