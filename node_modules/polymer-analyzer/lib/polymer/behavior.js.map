{"version":3,"sources":["polymer/behavior.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;;AAGH,gEAA0H;AAqB1H;;GAEG;AACH,qBAA6B,SAAQ,uCAAqB;IAIxD,YAAY,OAAgB;QAC1B,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,oBAAoB,GACtB,8BAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QACrD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;QACrD,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC5E,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;CACF;AAfD,0CAeC;AAED,cAAsB,SAAQ,gCAAc;IAG1C;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,QAAQ;QACN,MAAM,CAAC,uBAAuB,IAAI,CAAC,SAAS,GAAG,CAAC;IAClD,CAAC;CACF;AAXD,4BAWC","file":"behavior.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Document, SourceRange} from '../model/model';\nimport {getBehaviors, Options as ElementOptions, PolymerElement, ScannedPolymerElement} from '../polymer/polymer-element';\n\n/**\n * A scanned behavior assignment of a Polymer element. This is only a\n * reference to the behavior and not the actual behavior definition itself.\n *\n * Example:\n *\n *   Polymer({\n *     is: 'custom-element',\n *     behaviors: [Polymer.SomeBehavior]\n *                 ^^^^^^^^^^^^^^^^^^^^\n *   });\n */\nexport interface ScannedBehaviorAssignment {\n  name: string;\n  sourceRange: SourceRange;\n}\n\nexport interface Options extends ElementOptions {}\n\n/**\n * The metadata for a Polymer behavior mixin.\n */\nexport class ScannedBehavior extends ScannedPolymerElement {\n  tagName: undefined;\n  className: string;\n\n  constructor(options: Options) {\n    super(options);\n  }\n\n  resolve(document: Document) {\n    const behaviorsAndWarnings =\n        getBehaviors(this.behaviorAssignments, document);\n    const behavior = Object.assign(new Behavior(), this);\n    behavior.warnings = behavior.warnings.concat(behaviorsAndWarnings.warnings);\n    return behavior;\n  }\n}\n\nexport class Behavior extends PolymerElement {\n  tagName: undefined;\n  className: string;\n  constructor() {\n    super();\n    this.kinds = new Set(['behavior']);\n  }\n\n  toString() {\n    return `<Behavior className=${this.className}>`;\n  }\n}\n"]}