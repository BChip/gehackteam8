{"version":3,"sources":["test/polymer/polymer-element_test.ts"],"names":[],"mappings":"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","file":"polymer-element_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert} from 'chai';\nimport * as path from 'path';\n\nimport {Analyzer} from '../../analyzer';\nimport {PolymerElement} from '../../polymer/polymer-element';\nimport {Polymer2ElementScanner} from '../../polymer/polymer2-element-scanner';\nimport {Polymer2MixinScanner} from '../../polymer/polymer2-mixin-scanner';\nimport {FSUrlLoader} from '../../url-loader/fs-url-loader';\n\nsuite('PolymerElement', () => {\n  const testFilesDir = path.resolve(__dirname, '../static/polymer2/');\n  const urlLoader = new FSUrlLoader(testFilesDir);\n  const analyzer = new Analyzer({\n    urlLoader: urlLoader,\n    scanners: new Map([[\n      'js',\n      [\n        new Polymer2ElementScanner(),\n        new Polymer2MixinScanner(),\n      ]\n    ]])\n  });\n\n  async function getElements(filename: string): Promise<Set<PolymerElement>> {\n    const document = await analyzer.analyze(filename);\n    const elements = document.getByKind('polymer-element');\n    return elements;\n  };\n\n  function getTestProps(element: PolymerElement): any {\n    return {\n      className: element.className,\n      superClass: element.superClass && element.superClass.identifier,\n      tagName: element.tagName,\n      description: element.description,\n      properties: element.properties.map((p) => ({\n                                           name: p.name,\n                                           inheritedFrom: p.inheritedFrom,\n                                         })),\n      attributes: element.attributes.map((a) => ({\n                                           name: a.name,\n                                         })),\n      methods: element.methods.map(\n          (m) => ({name: m.name, params: m.params, return: m.return })),\n    };\n  }\n\n  test('Scans base and sub-class', async() => {\n    const elements = await getElements('test-element-3.js');\n    const elementData = Array.from(elements).map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        properties: [{\n          name: 'foo',\n          inheritedFrom: undefined,\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n      },\n      {\n        tagName: 'sub-element',\n        className: 'SubElement',\n        superClass: 'BaseElement',\n        description: '',\n        properties: [\n          {\n            name: 'foo',\n            inheritedFrom: 'BaseElement',\n          },\n          {\n            name: 'bar',\n            inheritedFrom: undefined,\n          },\n        ],\n        attributes: [\n          {\n            name: 'foo',\n          },\n          {\n            name: 'bar',\n          },\n        ],\n        methods: [],\n      },\n    ]);\n  });\n\n  test('Elements inherit from mixins and base classes', async() => {\n    const elements = await getElements('test-element-7.js');\n    const elementData = Array.from(elements).map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        properties: [\n          {\n            name: 'one',\n            inheritedFrom: undefined,\n          },\n          {\n            name: 'two',\n            inheritedFrom: undefined,\n          }\n        ],\n        attributes: [\n          {\n            name: 'one',\n          },\n          {\n            name: 'two',\n          }\n        ],\n        methods: [\n          {name: 'customMethodOnBaseElement', params: [], return: undefined}\n        ],\n      },\n      {\n        tagName: 'sub-element',\n        className: 'SubElement',\n        superClass: 'BaseElement',\n        description: '',\n        properties: [\n          {\n            name: 'one',\n            inheritedFrom: 'BaseElement',\n          },\n          {\n            name: 'two',\n            inheritedFrom: 'Mixin',\n          },\n          {\n            name: 'three',\n            inheritedFrom: 'Mixin',\n          },\n          {\n            name: 'four',\n            inheritedFrom: undefined,\n          },\n          {\n            inheritedFrom: undefined,\n            name: 'five',\n          }\n        ],\n        attributes: [\n          {\n            name: 'one',\n          },\n          {\n            name: 'two',\n          },\n          {\n            name: 'three',\n          },\n          {\n            name: 'four',\n          },\n          {\n            name: 'five',\n          }\n        ],\n        methods: [\n          {name: 'customMethodOnBaseElement', params: [], return: undefined},\n          {name: 'customMethodOnMixin', params: [], return: undefined},\n          {name: 'customMethodOnSubElement', params: [], return: undefined},\n        ],\n      },\n    ]);\n  });\n\n});\n"]}