{"version":3,"sources":["test/editor-service/editor-service_test.ts"],"names":[],"mappings":"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","file":"editor-service_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport {AttributesCompletion, EditorService, ElementCompletion} from '../../editor-service/editor-service';\nimport {LocalEditorService} from '../../editor-service/local-editor-service';\nimport {RemoteEditorService} from '../../editor-service/remote-editor-service';\nimport {Severity, Warning} from '../../model/model';\nimport {FSUrlLoader} from '../../url-loader/fs-url-loader';\nimport {PackageUrlResolver} from '../../url-loader/package-url-resolver';\nimport {CodeUnderliner, invertPromise} from '../test-utils';\n\nfunction editorTests(editorFactory: (basedir: string) => EditorService) {\n  const basedir = path.join(__dirname, '../static');\n  const indexFile = path.join('editor-service', 'index.html');\n\n  const tagPosition = {line: 7, column: 9};\n  const tagPositionEnd = {line: 7, column: 21};\n  const localAttributePosition = {line: 7, column: 31};\n  const deepAttributePosition = {line: 7, column: 49};\n\n  const elementTypeahead: ElementCompletion = {\n    kind: 'element-tags',\n    elements: [\n      {\n        tagname: 'behavior-test-elem',\n        description: 'An element to test out behavior inheritance.',\n        expandTo: undefined\n      },\n      {description: '', tagname: 'class-declaration', expandTo: undefined},\n      {description: '', tagname: 'anonymous-class', expandTo: undefined},\n      {description: '', tagname: 'class-expression', expandTo: undefined},\n      {\n        description: '',\n        tagname: 'register-before-declaration',\n        expandTo: undefined\n      },\n      {\n        description: '',\n        tagname: 'register-before-expression',\n        expandTo: undefined\n      },\n      {\n        description: 'This is a description of WithObservedAttributes.',\n        tagname: 'vanilla-with-observed-attributes',\n        expandTo: undefined\n      },\n    ]\n  };\n  // Like elementTypeahead, but we also want to add a leading < because we're\n  // in a context where we don't have one.\n  const emptyStartElementTypeahead = Object.assign({}, elementTypeahead);\n  emptyStartElementTypeahead.elements =\n      emptyStartElementTypeahead.elements.map((e) => {\n        const copy = Object.assign({}, e);\n        let space = '';\n        const elementsWithAttributes =\n            new Set(['vanilla-with-observed-attributes', 'behavior-test-elem']);\n        if (elementsWithAttributes.has(e.tagname)) {\n          space = ' ';\n        }\n        copy.expandTo = `<${e.tagname}${space}></${e.tagname}>`;\n        return copy;\n      });\n\n  const attributeTypeahead: AttributesCompletion = {\n    kind: 'attributes',\n    attributes: [\n      {\n        name: 'local-property',\n        description: 'A property defined directly on behavior-test-elem.',\n        type: 'boolean',\n        sortKey: 'aaa-local-property',\n        inheritedFrom: undefined,\n      },\n      {\n        name: 'inherit-please',\n        description: 'A property provided by SimpleBehavior.',\n        type: 'number',\n        sortKey: 'ddd-inherit-please',\n        inheritedFrom: 'MyNamespace.SimpleBehavior',\n      },\n      {\n        name: 'deeply-inherited-property',\n        description: 'This is a deeply inherited property.',\n        type: 'Array',\n        sortKey: 'ddd-deeply-inherited-property',\n        inheritedFrom: 'MyNamespace.SubBehavior',\n      },\n      {\n        name: 'on-local-property-changed',\n        description: 'Fired when the `localProperty` property changes.',\n        type: 'CustomEvent',\n        sortKey: 'eee-aaa-on-local-property-changed',\n        inheritedFrom: undefined,\n      },\n      {\n        name: 'on-inherit-please-changed',\n        description: 'Fired when the `inheritPlease` property changes.',\n        type: 'CustomEvent',\n        sortKey: 'eee-ddd-on-inherit-please-changed',\n        inheritedFrom: 'MyNamespace.SimpleBehavior',\n      },\n      {\n        name: 'on-deeply-inherited-property-changed',\n        description:\n            'Fired when the `deeplyInheritedProperty` property changes.',\n        type: 'CustomEvent',\n        sortKey: 'eee-ddd-on-deeply-inherited-property-changed',\n        inheritedFrom: 'MyNamespace.SubBehavior',\n      },\n    ]\n  };\n  const indexContents = fs.readFileSync(path.join(basedir, indexFile), 'utf-8');\n\n  // The weird cast is because the service will always be non-null when we\n  // actually use it.\n  let editorService: EditorService = <EditorService><any>null;\n  setup(async() => {\n    editorService = editorFactory(basedir);\n  });\n\n  suite('getDocumentationAtPosition', function() {\n    const tagDescription = 'An element to test out behavior inheritance.';\n    const localAttributeDescription =\n        '{boolean} A property defined directly on behavior-test-elem.';\n    const deepAttributeDescription =\n        '{Array} This is a deeply inherited property.';\n\n    test(\n        'it supports getting the element description ' +\n            'when asking for docs at its tag name',\n        async() => {\n          await editorService.fileChanged(indexFile, indexContents);\n          assert.equal(\n              await editorService.getDocumentationAtPosition(\n                  indexFile, tagPosition),\n              tagDescription);\n        });\n\n    test(\n        'it can still get element info after changing a file in memory',\n        async() => {\n          await editorService.fileChanged(indexFile, indexContents);\n          const contents =\n              fs.readFileSync(path.join(basedir, indexFile), 'utf-8');\n          // Add a newline at the beginning of the file, shifting the lines\n          // down.\n          await editorService.fileChanged(indexFile, `\\n${contents}`);\n\n          assert.equal(\n              await editorService.getDocumentationAtPosition(\n                  indexFile, tagPosition),\n              undefined);\n          assert.equal(\n              await editorService.getDocumentationAtPosition(\n                  indexFile,\n                  {line: tagPosition.line + 1, column: tagPosition.column}),\n              tagDescription, );\n        });\n\n    test('it supports getting an attribute description', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      assert.equal(\n          await editorService.getDocumentationAtPosition(\n              indexFile, localAttributePosition),\n          localAttributeDescription);\n    });\n\n    test(\n        'it supports getting a description of an attribute ' +\n            'defined in a behavior',\n        async() => {\n          await editorService.fileChanged(indexFile, indexContents);\n          assert.equal(\n              await editorService.getDocumentationAtPosition(\n                  indexFile, deepAttributePosition),\n              deepAttributeDescription);\n        });\n  });\n\n  suite('getDefinitionForFeatureAtPosition', function() {\n\n    test(\n        `it supports getting the definition of ` +\n            `an element from its tag`,\n        async() => {\n          await editorService.fileChanged(indexFile, indexContents);\n          deepEqual(\n              await editorService.getDefinitionForFeatureAtPosition(\n                  indexFile, tagPosition),\n              {\n                file: 'analysis/behaviors/elementdir/element.html',\n                start: {line: 4, column: 10},\n                end: {line: 29, column: 3}\n              });\n        });\n\n    test('it supports getting the definition of a local attribute', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      deepEqual(\n          await editorService.getDefinitionForFeatureAtPosition(\n              indexFile, localAttributePosition),\n          {\n            file: 'analysis/behaviors/elementdir/element.html',\n            start: {line: 9, column: 6},\n            end: {line: 13, column: 7}\n          });\n    });\n\n    test(\n        'it supports getting the definition of an attribute ' +\n            'defined in a behavior',\n        async() => {\n          await editorService.fileChanged(indexFile, indexContents);\n          deepEqual(\n              await editorService.getDefinitionForFeatureAtPosition(\n                  indexFile, deepAttributePosition),\n              {\n                file: 'analysis/behaviors/subdir/subbehavior.html',\n                start: {line: 5, column: 6},\n                end: {line: 11, column: 7}\n              });\n        });\n\n  });\n\n  suite('getTypeaheadCompletionsAtPosition', function() {\n\n    test('Get element completions for an empty text region.', async() => {\n      await editorService.fileChanged(indexFile, `\\n${indexContents}`);\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, {line: 0, column: 0}),\n          emptyStartElementTypeahead);\n    });\n\n    test('Get element completions for a start tag.', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, tagPosition),\n          elementTypeahead);\n    });\n\n    test('Gets element completions with an incomplete tag', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      const incompleteText = `<behav>`;\n      editorService.fileChanged(\n          indexFile, `${incompleteText}\\n${indexContents}`);\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, {line: 0, column: incompleteText.length - 2}),\n          elementTypeahead);\n    });\n\n    test('Get element completions for the end of a tag', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, tagPositionEnd),\n          elementTypeahead);\n    });\n\n    test(\n        'Get attribute completions when editing an existing attribute',\n        async() => {\n          await editorService.fileChanged(indexFile, indexContents);\n          deepEqual(\n              await editorService.getTypeaheadCompletionsAtPosition(\n                  indexFile, localAttributePosition),\n              attributeTypeahead);\n        });\n\n    test('Get attribute completions when adding a new attribute', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      const partialContents = [\n        `<behavior-test-elem >`,\n        `<behavior-test-elem existing-attr>`,\n        `<behavior-test-elem existing-attr></behavior-test-elem>`,\n        `<behavior-test-elem existing-attr></wrong-closing-tag>`\n      ];\n      for (const partial of partialContents) {\n        await editorService.fileChanged(\n            indexFile, `${partial}\\n${indexContents}`);\n        deepEqual(\n            await editorService.getTypeaheadCompletionsAtPosition(indexFile, {\n              line: 0,\n              column: 20 /* after the space after the element name */\n            }),\n            attributeTypeahead);\n      }\n    });\n\n    test('Recover from references to undefined files.', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n\n      // Load a file that contains a reference error.\n      await editorService.fileChanged(indexFile, `${indexContents}\n           <script src=\"nonexistant.js\"></script>`);\n\n      // We recover after getting a good version of the file.\n      await editorService.fileChanged(indexFile, indexContents);\n\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, localAttributePosition),\n          attributeTypeahead);\n    });\n\n    test('Remain useful in the face of unloadable files.', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n\n      // We load a file that contains a reference error.\n      await editorService.fileChanged(indexFile, `${indexContents}\n           <script src=\"nonexistant.js\"></script>`);\n\n      // Harder: can we give typeahead completion when there's errors?'\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, localAttributePosition),\n          attributeTypeahead);\n    });\n\n    test('Remain useful in the face of syntax errors.', async() => {\n      const goodContents =\n          fs.readFileSync(path.join(basedir, indexFile), 'utf-8');\n      // Load a file with a syntax error\n      await invertPromise(editorService.fileChanged(\n          path.join(basedir, 'syntax-error.js'),\n          'var var var var var var var var “hello”'));\n\n      await editorService.fileChanged(indexFile, `${goodContents}\n          <script src=\"./syntax-error.js\"></script>`);\n      // Even with a reference to the bad file we can still get completions!\n      deepEqual(\n          await editorService.getTypeaheadCompletionsAtPosition(\n              indexFile, localAttributePosition),\n          attributeTypeahead);\n    });\n\n    test(`Don't give HTML completions inside of script tags.`, async() => {\n      await editorService.fileChanged(\n          indexFile, '<script>\\n\\n</script>\\n' + indexContents);\n      const completions = await editorService.getTypeaheadCompletionsAtPosition(\n          indexFile, {line: 1, column: 0});\n      assert.deepEqual(completions, undefined);\n    });\n\n  });\n\n  suite('getWarningsForFile', function() {\n    let fileContents = '';\n    const loader = {\n      canLoad: () => true,\n      load: () => Promise.resolve(fileContents),\n    };\n    const underliner = new CodeUnderliner(loader);\n\n    test('For a good document we get no warnings', async() => {\n      await editorService.fileChanged(indexFile, indexContents);\n      deepEqual(await editorService.getWarningsForFile(indexFile), []);\n    });\n\n    test(`Warn on imports of files that aren't found.`, async() => {\n      const badImport = `<link rel=\"import\" href=\"./does-not-exist.html\">`;\n      fileContents = `${badImport}\\n\\n${indexContents}`;\n      await editorService.fileChanged(indexFile, fileContents);\n      const warnings = await editorService.getWarningsForFile(indexFile);\n      assert.equal(\n          warnings.filter((warning) => warning.code === 'could-not-load')\n              .length,\n          1);\n      assert.containSubset(\n          warnings, [{code: 'could-not-load', severity: Severity.ERROR}]);\n      assert.deepEqual(await underliner.underline(warnings), [`\n<link rel=\"import\" href=\"./does-not-exist.html\">\n                        ~~~~~~~~~~~~~~~~~~~~~~~`]);\n      assert.match(\n          warnings[0].message,\n          /Unable to load import:.*no such file or directory/);\n    });\n\n    test(`Warn on imports of files that don't parse.`, async() => {\n      const badImport = `<script src=\"../js-parse-error.js\"></script>`;\n      fileContents = `${badImport}\\n\\n${indexContents}`;\n      await editorService.fileChanged(indexFile, fileContents);\n      const warnings = await editorService.getWarningsForFile(indexFile);\n      assert.containSubset(\n          warnings, <Warning[]>[{\n            code: 'could-not-load',\n            message: 'Unable to load import: Unexpected token ,',\n            severity: Severity.ERROR,\n            sourceRange: {\n              file: 'editor-service/index.html',\n            }\n          }]);\n      assert.deepEqual(await underliner.underline(warnings), [`\n<script src=\"../js-parse-error.js\"></script>\n            ~~~~~~~~~~~~~~~~~~~~~~`]);\n    });\n\n    test(`Don't warn on imports of files with no known parser`, async() => {\n      const badImport = `<script src=\"./foo.unknown_extension\"></script>`;\n      await editorService.fileChanged(\n          indexFile, `${badImport}\\n\\n${indexContents}`);\n      assert.containSubset(\n          await editorService.getWarningsForFile(indexFile), []);\n    });\n\n    test(`Warn on syntax errors in inline javascript documents`, async() => {\n      const badScript = `\\n<script>var var var var var let const;</script>`;\n      fileContents = badScript;\n      await editorService.fileChanged(indexFile, fileContents);\n      const warnings = await editorService.getWarningsForFile(indexFile);\n      assert.containSubset(\n          warnings, <Warning[]>[{\n            code: 'parse-error',\n            severity: Severity.ERROR,\n            message: 'Unexpected token var',\n            sourceRange: {file: 'editor-service/index.html'}\n          }]);\n      assert.deepEqual(await underliner.underline(warnings), [`\n<script>var var var var var let const;</script>\n            ~`]);\n    });\n\n    test(\n        `Do not warn on a sibling import ` +\n            `if configured with a package url resolver`,\n        async() => {\n          const testBaseDir = path.join(basedir, 'package-url-resolver');\n          editorService = editorFactory(testBaseDir);\n          const warnings =\n              await editorService.getWarningsForFile('simple-elem.html');\n          deepEqual(warnings, []);\n        });\n\n    test(\n        `Warn about parse errors in the file ` +\n            `we're requesting errors for.`,\n        async() => {\n          const warnings =\n              await editorService.getWarningsForFile('js-parse-error.js');\n          deepEqual(warnings, [{\n                      code: 'parse-error',\n                      message: 'Unexpected token ,',\n                      severity: Severity.ERROR,\n                      sourceRange: {\n                        file: 'js-parse-error.js',\n                        start: {line: 17, column: 8},\n                        end: {line: 17, column: 8}\n                      }\n                    }]);\n        });\n  });\n}\n\n/**\n * We need to use different deep equality functions when testing\n * LocalEditorService and RemoteEditorService because RemoteEditorService has\n * gone through a JSON stringify/parse pass.\n */\nlet deepEqual: (actual: any, expected: any, message?: string) => void;\n\nsuite('LocalEditorService', function() {\n  suiteSetup(() => {\n    deepEqual = assert.deepEqual;\n  });\n\n  editorTests((basedir) => new LocalEditorService({\n                urlLoader: new FSUrlLoader(basedir),\n                urlResolver: new PackageUrlResolver()\n              }));\n});\n\n// It takes ~300ms to wake up a new RemoteEditorService, so when running tests\n// in fast mode we cache them by basedir.\nconst sloppyTest = !!process.env.QUICK_TESTS;\nsuite('RemoteEditorService', function() {\n\n  suiteSetup(() => {\n    deepEqual = expectJsonDeepEqual;\n  });\n\n  const remoteEditorsByBasedir = new Map<string, RemoteEditorService>();\n  const editors: RemoteEditorService[] = [];\n\n  editorTests((basedir) => {\n    if (sloppyTest) {\n      const cachedServer = remoteEditorsByBasedir.get(basedir);\n      if (cachedServer) {\n        return cachedServer;\n      }\n    }\n    const server = new RemoteEditorService(basedir);\n    if (sloppyTest) {\n      remoteEditorsByBasedir.set(basedir, server);\n    }\n    editors.push(server);\n    return server;\n  });\n\n  teardown(async() => {\n    if (sloppyTest) {\n      // clear the caches to minimize inter-test interaction.\n      for (const server of editors) {\n        await server._clearCaches();\n      }\n      return;\n    }\n\n    // tear them all down\n    for (const server of editors) {\n      server.dispose();\n    }\n    editors.length = 0;\n  });\n\n  suiteTeardown(() => {\n    // Final cleanup for sloppy mode.\n    if (sloppyTest) {\n      for (const server of remoteEditorsByBasedir.values()) {\n        server.dispose();\n      }\n      remoteEditorsByBasedir.clear();\n    }\n  });\n});\n\n\nfunction expectJsonDeepEqual(actual: any, expected: any) {\n  // Primarily useful because it strips out `undefined`, which\n  // RemoteEditorService does because it uses JSON for IPC.\n  assert.deepEqual(actual, JSON.parse(JSON.stringify(expected)));\n}\n"]}