{"version":3,"sources":["model/document.ts"],"names":[],"mappings":"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","file":"document.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport * as dom5 from 'dom5';\n\nimport {AnalysisContext} from '../core/analysis-context';\nimport {Function} from '../javascript/function';\nimport {Namespace} from '../javascript/namespace';\nimport {ParsedDocument} from '../parser/document';\nimport {Behavior} from '../polymer/behavior';\nimport {DomModule} from '../polymer/dom-module-scanner';\nimport {PolymerElement} from '../polymer/polymer-element';\nimport {PolymerElementMixin} from '../polymer/polymer-element-mixin';\n\nimport {Element} from './element';\nimport {ElementMixin} from './element-mixin';\nimport {ElementReference} from './element-reference';\nimport {Feature, ScannedFeature} from './feature';\nimport {Import} from './import';\nimport {Package} from './package';\nimport {BaseQueryOptions, Queryable} from './queryable';\nimport {isResolvable} from './resolvable';\nimport {SourceRange} from './source-range';\nimport {Warning} from './warning';\n\n/**\n * The metadata for all features and elements defined in one document\n */\nexport class ScannedDocument {\n  document: ParsedDocument<any, any>;\n  features: ScannedFeature[];\n  warnings: Warning[];\n  isInline = false;\n\n  get sourceRange() {\n    return this.document.sourceRange;\n  }\n  get astNode() {\n    return this.document.astNode;\n  }\n\n  constructor(\n      document: ParsedDocument<any, any>, features: ScannedFeature[],\n      warnings?: Warning[]) {\n    this.document = document;\n    this.features = features;\n    this.warnings = warnings || [];\n    this.isInline = document.isInline;\n  }\n\n  get url() {\n    return this.document.url;\n  }\n\n  /**\n   * Gets all features in this scanned document and all inline documents it\n   * contains.\n   */\n  getNestedFeatures(): ScannedFeature[] {\n    const result: ScannedFeature[] = [];\n    this._getNestedFeatures(result);\n    return result;\n  }\n\n  private _getNestedFeatures(features: ScannedFeature[]): void {\n    for (const feature of this.features) {\n      // Ad hoc test needed here to avoid a problematic import loop.\n      if (feature.constructor.name === 'ScannedDocument' &&\n          feature['scannedDocument']) {\n        const innerDoc = feature['scannedDocument'] as ScannedDocument;\n        innerDoc._getNestedFeatures(features);\n      } else {\n        features.push(feature);\n      }\n    }\n  }\n}\n\n// A map between kind string literal types and their feature types.\nexport interface FeatureKinds {\n  'document': Document;\n  'element': Element;\n  'element-mixin': ElementMixin;\n  'polymer-element': PolymerElement;\n  'polymer-element-mixin': PolymerElementMixin;\n  'behavior': Behavior;\n  'namespace': Namespace;\n  'function': Function;\n  'dom-module': DomModule;\n  'element-reference': ElementReference;\n  'import': Import;\n\n  // Document specializations.\n  'html-document': Document;\n  'js-document': Document;\n  'json-document': Document;\n  'css-document': Document;\n\n  // Import specializations.\n  'html-import': Import;\n  'html-script': Import;\n  'html-style': Import;\n  'js-import': Import;\n  'css-import': Import;\n}\n\nexport interface QueryOptionsInterface extends BaseQueryOptions {\n  /**\n   * If true, the query will return results from the document and its\n   * dependencies. Otherwise it will only include results from the document.\n   */\n  imported?: boolean;\n}\n\nexport type QueryOptions = object & QueryOptionsInterface;\n\nexport class Document implements Feature, Queryable {\n  kinds: Set<string> = new Set(['document']);\n  identifiers: Set<string> = new Set();\n  analyzer: AnalysisContext;\n  warnings: Warning[];\n  languageAnalysis?: any;\n\n  private _localFeatures = new Set<Feature>();\n  private _scannedDocument: ScannedDocument;\n\n\n  /**\n   * To handle recursive dependency graphs we must track whether we've started\n   * resolving this Document so that we can reliably early exit even if one\n   * of our dependencies tries to resolve this document.\n   */\n  private _begunResolving = false;\n\n  /**\n   * True after this document and all of its children are finished resolving.\n   */\n  private _doneResolving = false;\n\n  constructor(\n      base: ScannedDocument, analyzer: AnalysisContext,\n      languageAnalysis?: any) {\n    if (base == null) {\n      throw new Error('base is null');\n    }\n    if (analyzer == null) {\n      throw new Error('analyzer is null');\n    }\n    this._scannedDocument = base;\n    this.analyzer = analyzer;\n    this.languageAnalysis = languageAnalysis;\n\n    if (!base.isInline) {\n      this.identifiers.add(this.url);\n    }\n    this.kinds.add(`${this.parsedDocument.type}-document`);\n    this.warnings = Array.from(base.warnings);\n  }\n\n  get url(): string {\n    return this._scannedDocument.url;\n  }\n\n  get isInline(): boolean {\n    return this._scannedDocument.isInline;\n  }\n\n  get sourceRange(): SourceRange|undefined {\n    return this._scannedDocument.sourceRange;\n  }\n\n  get astNode(): dom5.Node|undefined {\n    return this._scannedDocument.astNode;\n  }\n\n  get parsedDocument(): ParsedDocument<any, any> {\n    return this._scannedDocument.document;\n  }\n\n  get resolved(): boolean {\n    return this._doneResolving;\n  }\n\n  get type(): string {\n    return this.parsedDocument.type;\n  }\n\n  /**\n   * Resolves all features of this document, so that they have references to all\n   * their dependencies.\n   *\n   * This method can only be called once\n   */\n  // TODO(justinfagnani): move to ScannedDocument\n  resolve() {\n    if (this._doneResolving) {\n      throw new Error('resolve can only be called once');\n    }\n    if (this._begunResolving) {\n      return;\n    }\n    this._begunResolving = true;\n    this._addFeature(this);\n    for (const scannedFeature of this._scannedDocument.features) {\n      if (isResolvable(scannedFeature)) {\n        const feature = scannedFeature.resolve(this);\n        if (feature) {\n          this._addFeature(feature);\n        }\n      }\n    }\n    this._doneResolving = true;\n  }\n\n  /**\n   * Adds and indexes a feature to this documentled before resolve().\n   */\n  _addFeature(feature: Feature) {\n    if (this._doneResolving) {\n      throw new Error('_addFeature can not be called after _resolve()');\n    }\n    this._indexFeature(feature);\n    this._localFeatures.add(feature);\n  }\n\n  getByKind<K extends keyof FeatureKinds>(kind: K, options?: QueryOptions):\n      Set<FeatureKinds[K]>;\n  getByKind(kind: string, options?: QueryOptions): Set<Feature>;\n  getByKind(kind: string, options?: QueryOptions): Set<Feature> {\n    options = options || {};\n    if (this._featuresByKind && options.imported) {\n      // We have a fast index! Use that.\n      const features = this._featuresByKind.get(kind) || new Set();\n      if (!options.externalPackages) {\n        return this._filterOutExternal(features);\n      }\n      return features;\n    } else if (this._doneResolving && options.imported) {\n      // We're done discovering features in this document and its children so\n      // we can safely build up the indexes.\n      this._buildIndexes();\n      return this.getByKind(kind, options);\n    }\n    return this._getByKind(kind, options);\n  }\n\n  getById<K extends keyof FeatureKinds>(\n      kind: K, identifier: string,\n      options?: QueryOptions): Set<FeatureKinds[K]>;\n  getById(kind: string, identifier: string, options?: QueryOptions):\n      Set<Feature>;\n  getById(kind: string, identifier: string, options?: QueryOptions):\n      Set<Feature> {\n    options = options || {};\n    if (this._featuresByKindAndId && options.imported) {\n      // We have a fast index! Use that.\n      const idMap = this._featuresByKindAndId.get(kind);\n      const features = (idMap && idMap.get(identifier)) || new Set();\n      if (!options.externalPackages) {\n        return this._filterOutExternal(features);\n      }\n      return features;\n    } else if (this._doneResolving && options.imported) {\n      // We're done discovering features in this document and its children so\n      // we can safely build up the indexes.\n      this._buildIndexes();\n      return this.getById(kind, identifier, options);\n    }\n    const result = new Set<Feature>();\n    for (const featureOfKind of this.getByKind(kind, options)) {\n      if (featureOfKind.identifiers.has(identifier)) {\n        result.add(featureOfKind);\n      }\n    }\n    return result;\n  }\n\n  getOnlyAtId<K extends keyof FeatureKinds>(\n      kind: K, identifier: string,\n      options?: QueryOptions): FeatureKinds[K]|undefined;\n  getOnlyAtId(kind: string, identifier: string, options?: QueryOptions): Feature\n      |undefined;\n  getOnlyAtId(kind: string, identifier: string, options?: QueryOptions): Feature\n      |undefined {\n    const results = this.getById(kind, identifier, options);\n    if (results.size > 1) {\n      throw new Error(\n          `Expected to find at most one ${kind} with id ${identifier} ` +\n          `but found ${results.size}.`);\n    }\n    return results.values().next().value || undefined;\n  }\n\n  getFeatures(options?: QueryOptions): Set<Feature> {\n    options = options || {};\n    const result = new Set<Feature>();\n    this._getFeatures(result, new Set<Document>(), options);\n    return result;\n  }\n\n  private _getByKind(kind: string, options: QueryOptions): Set<Feature> {\n    const allFeatures = new Set<Feature>();\n    this._getFeatures(allFeatures, new Set(), options);\n\n    const result = new Set<Feature>();\n    for (const feature of allFeatures) {\n      if (feature.kinds.has(kind)) {\n        result.add(feature);\n      }\n    }\n\n    return result;\n  }\n\n  private _getFeatures(\n      result: Set<Feature>, visited: Set<Document>, options: QueryOptions) {\n    if (visited.has(this)) {\n      return;\n    }\n    visited.add(this);\n    for (const feature of this._localFeatures) {\n      result.add(feature);\n      if (feature.kinds.has('document')) {\n        (feature as Document)._getFeatures(result, visited, options);\n      }\n      if (feature.kinds.has('import') && options.imported) {\n        const imprt = feature as Import;\n        const isPackageInternal =\n            imprt.document && !Package.isExternal(imprt.document.url);\n        if (options.externalPackages || isPackageInternal) {\n          imprt.document._getFeatures(result, visited, options);\n        }\n      }\n    }\n  }\n\n  private _filterOutExternal(features: Set<Feature>): Set<Feature> {\n    const result = new Set();\n    for (const feature of features) {\n      if (feature.sourceRange && Package.isExternal(feature.sourceRange.file)) {\n        continue;\n      }\n      result.add(feature);\n    }\n    return result;\n  }\n\n  /**\n   * Get warnings for the document and all matched features.\n   */\n  getWarnings(options?: QueryOptions): Warning[] {\n    const warnings: Set<Warning> = new Set(this.warnings);\n    for (const feature of this.getFeatures(options)) {\n      for (const warning of feature.warnings) {\n        warnings.add(warning);\n      }\n    }\n    return Array.from(warnings);\n  }\n\n  toString(): string {\n    return this._toString(new Set()).join('\\n');\n  }\n\n  private _toString(documentsWalked: Set<Document>) {\n    let result =\n        [`<Document type=${this.parsedDocument.type} url=${this.url}>\\n`];\n    if (documentsWalked.has(this)) {\n      return result;\n    }\n    documentsWalked.add(this);\n\n    for (const localFeature of this._localFeatures) {\n      if (localFeature instanceof Document) {\n        result = result.concat(\n            localFeature._toString(documentsWalked).map((line) => `  ${line}`));\n      } else {\n        let subResult = localFeature.toString();\n        if (subResult === '[object Object]') {\n          subResult =\n              `<${localFeature.constructor.name} kinds=\"${Array\n                  .from(localFeature.kinds)\n                  .join(', ')}\" ids=\"${Array.from(localFeature.identifiers)\n                  .join(',')}\">}`;\n        }\n        result.push(`  ${subResult}`);\n      }\n    }\n\n    return result;\n  }\n\n  stringify(): string {\n    const inlineDocuments =\n        (Array.from(this._localFeatures)\n             .filter((f) => f instanceof Document && f.isInline) as Document[])\n            .map((d) => d.parsedDocument);\n    return this.parsedDocument.stringify({inlineDocuments: inlineDocuments});\n  }\n\n  private _featuresByKind: Map<string, Set<Feature>>|null = null;\n  private _featuresByKindAndId: Map<string, Map<string, Set<Feature>>>|null =\n      null;\n  private _initIndexes() {\n    this._featuresByKind = new Map<string, Set<Feature>>();\n    this._featuresByKindAndId = new Map<string, Map<string, Set<Feature>>>();\n  }\n\n  private _indexFeature(feature: Feature) {\n    if (!this._featuresByKind || !this._featuresByKindAndId) {\n      return;\n    }\n    for (const kind of feature.kinds) {\n      const kindSet = this._featuresByKind.get(kind) || new Set<Feature>();\n      kindSet.add(feature);\n      this._featuresByKind.set(kind, kindSet);\n      for (const id of feature.identifiers) {\n        const identifiersMap = this._featuresByKindAndId.get(kind) ||\n            new Map<string, Set<Feature>>();\n        this._featuresByKindAndId.set(kind, identifiersMap);\n        const idSet = identifiersMap.get(id) || new Set<Feature>();\n        identifiersMap.set(id, idSet);\n        idSet.add(feature);\n      }\n    }\n  }\n\n  private _buildIndexes() {\n    if (this._featuresByKind) {\n      throw new Error(\n          'Tried to build indexes multiple times. This should never happen.');\n    }\n    if (!this._doneResolving) {\n      throw new Error(\n          `Tried to build indexes before finished resolving. ` +\n          `Need to wait until afterwards or the indexes would be incomplete.`);\n    }\n    this._initIndexes();\n    for (const feature of this.getFeatures(\n             {imported: true, externalPackages: true})) {\n      this._indexFeature(feature);\n    }\n  }\n}\n"]}