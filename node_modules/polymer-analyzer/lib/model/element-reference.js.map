{"version":3,"sources":["model/element-reference.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;;;AAcH;IAAA;QAEE,eAAU,GAAgB,EAAE,CAAC;QAG7B,aAAQ,GAAc,EAAE,CAAC;QACzB,UAAK,GAAgB,IAAI,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAKtD,CAAC;IAHC,IAAI,WAAW;QACb,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;CACF;AAXD,4CAWC;AAED;IAOE,YAAY,OAAe,EAAE,WAAwB,EAAE,GAAc;QALrE,eAAU,GAAgB,EAAE,CAAC;QAG7B,aAAQ,GAAc,EAAE,CAAC;QAGvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAED,OAAO;QACL,MAAM,GAAG,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;CACF;AAlBD,0DAkBC","file":"element-reference.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5';\n\nimport {Feature, Resolvable, SourceRange, Warning} from '../model/model';\n\nexport interface Attribute {\n  name: string;\n  sourceRange: SourceRange;\n  nameSourceRange: SourceRange;\n  valueSourceRange: SourceRange|undefined;\n  value?: string;\n}\n\nexport class ElementReference implements Feature {\n  tagName: string;\n  attributes: Attribute[] = [];\n  sourceRange: SourceRange;\n  astNode: dom5.Node;\n  warnings: Warning[] = [];\n  kinds: Set<string> = new Set(['element-reference']);\n\n  get identifiers(): Set<string> {\n    return new Set([this.tagName]);\n  }\n}\n\nexport class ScannedElementReference implements Resolvable {\n  tagName: string;\n  attributes: Attribute[] = [];\n  sourceRange: SourceRange;\n  astNode: dom5.Node;\n  warnings: Warning[] = [];\n\n  constructor(tagName: string, sourceRange: SourceRange, ast: dom5.Node) {\n    this.tagName = tagName;\n    this.sourceRange = sourceRange;\n    this.astNode = ast;\n  }\n\n  resolve(): ElementReference {\n    const ref = new ElementReference();\n    Object.assign(ref, this);\n    return ref;\n  }\n}\n"]}